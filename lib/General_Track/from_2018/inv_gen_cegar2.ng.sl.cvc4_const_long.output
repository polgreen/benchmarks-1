unsat
(define-fun inv ((x Int) (m Int) (n Int)) Bool (let ((_let_1 (* (- 1) n))) (and (>= m 0) (>= (+ x (* (- 1) m)) 0) (or (not (>= n 1)) (not (>= (+ x _let_1) 0)) (not (>= (+ m _let_1) 0))))))
0.08user 0.00system 0:00.08elapsed 100%CPU (0avgtext+0avgdata 27028maxresident)k
0inputs+8outputs (0major+1574minor)pagefaults 0swaps
