unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (let ((_let_1 (arba x))) (let ((_let_2 (bvxor x (shesh _let_1)))) (let ((_let_3 (arba (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 x)))) (let ((_let_4 (ehad x))) (im (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 (im (bvnot x) #b0000000000000000000000000000000000000000000000000000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000)) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (im _let_4 x #b0000000000000000000000000000000000000000000000000000000000000001)) (im (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 (im _let_4 #b0000000000000000000000000000000000000000000000000000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000)) (im (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 (im (bvor #b0000000000000000000000000000000000000000000000000000000000000001 x) #b0000000000000000000000000000000000000000000000000000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000)) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (bvor x _let_1)) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 _let_1) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 _let_3) (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 (bvxor #b0000000000000000000000000000000000000000000000000000000000000001 x)) (im (bvor #b0000000000000000000000000000000000000000000000000000000000000001 _let_3) _let_2 x)) _let_2) _let_2) x) x) x) #b0000000000000000000000000000000000000000000000000000000000000000))))))
9.73user 0.10system 0:09.83elapsed 99%CPU (0avgtext+0avgdata 81560maxresident)k
8inputs+8outputs (0major+24735minor)pagefaults 0swaps
