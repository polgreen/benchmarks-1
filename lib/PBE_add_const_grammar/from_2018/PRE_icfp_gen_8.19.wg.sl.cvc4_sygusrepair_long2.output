unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (let ((_let_1 (smol (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 x)))) (let ((_let_2 (smol x))) (let ((_let_3 (shesh _let_2))) (let ((_let_4 (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (arba _let_2)))) (let ((_let_5 (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (arba x)))) (let ((_let_6 (bvnot x))) (let ((_let_7 (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (shesh x)))) (let ((_let_8 (ehad x))) (im (bvadd #b0000000000000000000000000000000000000000000000000000000000000001 (im x #b0000000000000000000000000000000000000000000000000000000000000001 #b0000000000000000000000000000000000000000000000000000000000000000)) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 _let_6) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 _let_8) (im _let_5 (im _let_7 (im _let_4 _let_3 _let_1) _let_1) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (ehad _let_8)) (im _let_4 (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (arba _let_8)) _let_2 _let_3) (im _let_7 (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 _let_3) _let_2 _let_3) _let_2)) (im (bvand #b0000000000000000000000000000000000000000000000000000000000000001 (shesh _let_6)) _let_2 _let_1))) (im _let_5 _let_3 (im _let_4 _let_3 _let_2))) _let_1) _let_1))))))))))
7.92user 0.03system 0:07.96elapsed 99%CPU (0avgtext+0avgdata 72184maxresident)k
8inputs+8outputs (0major+13855minor)pagefaults 0swaps
